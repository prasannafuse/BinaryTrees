#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define flag "FLAG"
#define esc "ESC"
#define max 50
char data[max];
char encodedData[max*2];
char decodedData[max];
int datalen = 0;
int i, j, k, count;

void Sender(int ch);
void Receiver(int ch, char receivedData[]);

void Sender(int ch){
    if(ch==1){
        printf("\nEnter data length: ");
        scanf("%d", &datalen);
        printf("\nEnter data: ");
        scanf("%s", data);
        data[datalen] = '\0';
        sprintf(encodedData, "%d", datalen);
        strcat(encodedData, data);
        encodedData[strlen(encodedData)] = '\0';
        printf("\nData to be sent is %s", encodedData);
        Receiver(ch, encodedData);
    }
    else if(ch==2){
        printf("\nEnter data length: ");
        scanf("%d", &datalen);
        printf("\nEnter data: ");
        scanf("%s", data);
        data[datalen] = '\0';
        j = 0;
        strcat(encodedData, flag);
        for(i = 0; i  < datalen; i++){
            if(data[i] == 'F' && data[i+1] == 'L' && data[i+2] == 'A' && data[i+3] == 'G'){
                strcat(encodedData, esc);
                strcat(encodedData, flag);
                i+=3;
            }else if(data[i] == 'E' && data[i+1] == 'S' && data[i+2] == 'C'){
                strcat(encodedData, esc);
                strcat(encodedData, esc);
                i+=2;
            }else{
                strncat(encodedData, &data[i],1);
            }
        }
        strcat(encodedData, flag);
        printf("\nEncoded data is %s", encodedData);
        Receiver(ch, encodedData);
    }
    else if(ch==3)
    {
        printf("\nEnter data length: ");
        scanf("%d", &datalen);
        printf("\nEnter data: ");
        scanf("%s", data);

        data[datalen] = '\0';
        for(i = 0; i < datalen; i++){
            if(data[i]=='1' && data[i+1]=='1' && data[i+2]=='1' && data[i+3]=='1' && data[i+4]=='1' ){
                strcat(encodedData, "111110");
                i+=4;
            }else{
                strncat(encodedData, &data[i], 1);
            }
        }
        printf("\nEncoded data is %s", encodedData);
        Receiver(ch, encodedData);
    }
}

void Receiver(int ch, char receivedData[]){
    if(ch==1){
        decodedData[0] = '\0';
        printf("\nReceived data is %s",receivedData);
        datalen = receivedData[0];
        j = 1;
        for(i = 0; i < datalen; i++){
            decodedData[i] = receivedData[j];
            j++;
        }
        decodedData[datalen] = '\0';
        printf("\nDecoded data is  %s of length %c", decodedData, receivedData[0]);
    }
    else if(ch==2){
        decodedData[0] = '\0';
        printf("\nReceived data is %s",receivedData);
        datalen =  strlen(receivedData);
        for(i = 4; i < datalen-4; i++){
            if(receivedData[i] == 'E' && receivedData[i+1] == 'S' && receivedData[i+2] == 'C'){
                // i+=3;
                if(receivedData[i+3] == 'E' && receivedData[i+4] == 'S' && receivedData[i+5] == 'C'){
                    strcat(decodedData, esc);
                    i+=5;
                }else{
                    strcat(decodedData, flag);
                    i+=6;
                }
            }else{
                strncat(decodedData, &receivedData[i],1);
            }
        } 
        printf("\nDecoded data is %s", decodedData);
    }
    else if(ch==3){
        decodedData[0] = '\0';
        printf("\nReceived data is %s",receivedData);
        datalen =  strlen(receivedData);
        for(i = 0; i < datalen; i++){
            if(receivedData[i]=='1' && receivedData[i+1]=='1' && receivedData[i+2]=='1' && receivedData[i+3]=='1' && receivedData[i+4]=='1' ){
                strcat(decodedData, "11111");
                i+=5;
            }else{
                strncat(decodedData, &receivedData[i], 1);
            }
        }
        printf("\nDecoded data is  %s", decodedData);
    }
}

int main(){
    int ch;
    do{
    printf("\n\n1)Byte count\n2)Flag byte with byte stuffing\n3)Flag byte with bit stuffing\n4)Exit\nEnter choice: ");
    scanf("%d", &ch);
    switch(ch){
        case 1: Sender(ch);
        break;
        case 2: Sender(ch);
        break;
        case 3: Sender(ch);
        break;
        case 4: exit(0);
        break;
        default: printf("\nInvalid choice");
    }
    }while(ch<=4);
}
